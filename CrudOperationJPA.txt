package com.example.controllers;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.model.Employee;
import com.example.service.EmployeeService;

@RestController
@RequestMapping("api/addemployee")
public class EmployeeController {
	private final Logger log = LoggerFactory.getLogger(this.getClass());
	@Autowired
	EmployeeService employeeService;
	
	@PostMapping(value="create")  
	public Employee addEmployee(@RequestBody Employee employee) {
		log.info("inserted");
		return employeeService.createEmployee(employee);
	}
	@GetMapping(value="/employee/{employeeId}")
	public Optional<Employee> getEmployeeById(@PathVariable("employeeId") Integer empNo){
		return employeeService.getEmployeeById(empNo);
	}
	@GetMapping(value="/employee/getList") // For Http GET request
	public Iterable<Employee> getAllEmployees() {
		return employeeService.getAllEmployees();
	}
	@PutMapping(value="update")
	public Employee updateEmployee(@RequestBody Employee employee) {
		return employeeService.updateEmployee(employee);
	}
    @DeleteMapping(value = "/employee/delete/{employeeId}")
	public void deleteEmployee(@PathVariable("employeeId")Integer empNo) {
		employeeService.deleteEmployee(empNo);
	}


}


package com.example.dao;

import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.PathVariable;

import com.example.model.Employee;

@Repository
public interface EmployeeDao extends JpaRepository<Employee,Integer> {
	
}


package com.example.model;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Employee {
  @Id
  @GeneratedValue(strategy= GenerationType.AUTO)
  private int empNo;
  public int getEmpNo() {
	return empNo;
}
  public Employee() {}
public void setEmpNo(int empNo) {
	this.empNo = empNo;
}
public String getEname() {
	return ename;
}
public void setEname(String ename) {
	this.ename = ename;
}
private String ename;
public Employee(int empNo, String ename) {
	super();
	this.empNo = empNo;
	this.ename = ename;
}
@Override
public String toString() {
	return "Employee [empNo=" + empNo + ", ename=" + ename + "]";
}
}


package com.example.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.example.dao.EmployeeDao;
import com.example.model.Employee;
@Service
public class EmployeeService {

	@Autowired
	private EmployeeDao employeeDao;
	
	public Employee createEmployee(Employee employee) {
		return employeeDao.save(employee);
	}

	public Optional<Employee> getEmployeeById(Integer empNo) {
		   return employeeDao.findById(empNo);
	}
	public Iterable<Employee> getAllEmployees() {
		return employeeDao.findAll();
	}
	public Employee updateEmployee(Employee employee) {
		return employeeDao.save(employee);
	}
	
	public void deleteEmployee(Integer empNo) {
		employeeDao.deleteById(empNo);
	}
}
